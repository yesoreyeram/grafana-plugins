name: Plugins Test, Build & Publish
on:
  pull_request:
    paths:
      - "plugins/**"
  push:
    branches:
      - main
    paths:
      - "plugins/**"
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  matrix-prep:
    name: detect file changes
    runs-on: ubuntu-20.04
    timeout-minutes: 3
    outputs:
      yesoreyeram-blank-datasource: ${{ steps.changes.outputs.yesoreyeram-blank-datasource }}
      yesoreyeram-hello-datasource: ${{ steps.changes.outputs.yesoreyeram-hello-datasource }}
      yesoreyeram-petstore-datasource: ${{ steps.changes.outputs.yesoreyeram-petstore-datasource }}
      yesoreyeram-hyperping-datasource: ${{ steps.changes.outputs.yesoreyeram-hyperping-datasource }}
      yesoreyeram-vercel-datasource: ${{ steps.changes.outputs.yesoreyeram-vercel-datasource }}
      plugins: ${{ steps.set-matrix.outputs.plugins }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Check for plugin file changes
        uses: dorny/paths-filter@v2.2.1
        id: changes
        with:
          token: ${{ github.token }}
          filters: |
            yesoreyeram-blank-datasource:
              - 'plugins/yesoreyeram-blank-datasource/**'
            yesoreyeram-hello-datasource:
              - 'plugins/yesoreyeram-hello-datasource/**'
            yesoreyeram-petstore-datasource:
              - 'plugins/yesoreyeram-petstore-datasource/**'
            yesoreyeram-hyperping-datasource:
              - 'plugins/yesoreyeram-hyperping-datasource/**'
            yesoreyeram-vercel-datasource:
              - 'plugins/yesoreyeram-vercel-datasource/**'
      - name: Check changes
        run: |
          echo ${{ steps.changes.outputs.yesoreyeram-blank-datasource == 'true' }}
          echo ${{ steps.changes.outputs.yesoreyeram-hello-datasource == 'true' }}
          echo ${{ steps.changes.outputs.yesoreyeram-petstore-datasource == 'true' }}
          echo ${{ steps.changes.outputs.yesoreyeram-hyperping-datasource == 'true' }}
          echo ${{ steps.changes.outputs.yesoreyeram-vercel-datasource == 'true' }}
      - name: Set matrix
        id: set-matrix
        run: |
          JSON="["
          if ${{ steps.changes.outputs.yesoreyeram-blank-datasource == 'true' }}; then JSON="$JSON\"yesoreyeram-blank-datasource\","; fi
          if ${{ steps.changes.outputs.yesoreyeram-hello-datasource == 'true' }}; then JSON="$JSON\"yesoreyeram-hello-datasource\","; fi
          if ${{ steps.changes.outputs.yesoreyeram-hyperping-datasource == 'true' }}; then JSON="$JSON\"yesoreyeram-hello-datasource\","; fi
          if [[ $JSON == *, ]]; then
              JSON="${JSON%?}"
          fi
          JSON="$JSON]"
          echo "$JSON"
          echo "plugins=$( echo "$JSON" )" >> $GITHUB_OUTPUT
  test-and-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      - name: Install frontend dependencies
        run: |
          yarn install --frozen-lockfile;
      - name: Spellcheck
        run: |
          yarn spellcheck;
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.6"
      - name: Install Mage
        run: |
          go install github.com/magefile/mage
      - name: Check mage
        run: |
          mage -version
      - name: Test backend
        run: |
          yarn test:backend
      - name: Build backend
        run: |
          yarn build:backend
      - name: Test frontend
        run: |
          yarn test
      - name: Build frontend
        run: |
          yarn build
      - name: Plugin artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugins-artifacts
          path: plugins/yesoreyeram-*/dist/*
  e2e:
    runs-on: ubuntu-20.04
    needs: test-and-build
    strategy:
      fail-fast: false
      matrix:
        gfVersion: ["8.4.7", "latest", "main"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      - name: Install frontend dependencies
        run: |
          yarn install --frozen-lockfile;
      - name: Download artifacts from previous job
        uses: actions/download-artifact@v3
        with:
          name: plugins-artifacts
          path: plugins
      - name: Change permissions on executables;
        run: |
          chmod +x plugins/yesoreyeram-**/dist/gpx*;
      - name: Start the docker container for e2e
        run: |
          docker-compose pull
          docker-compose up -d
        env:
          GF_VERSION: ${{ matrix.gfVersion }}
      - name: wait for grafana to start
        uses: nev7n/wait_for_response@v1
        with:
          url: "http://localhost:3000/"
          responseCode: 200
          timeout: 20000
          interval: 500
      - name: Run E2E
        run: yarn e2e
      - name: Stop the docker container
        if: always()
        run: docker-compose down
      - name: Store E2E artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-artifacts-${{ matrix.gfVersion }}
          path: |
            cypress/videos
            cypress/screenshots
  publish:
    runs-on: ubuntu-20.04
    needs: e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      - name: Install frontend dependencies
        run: |
          yarn install --frozen-lockfile;
      - name: Download artifacts from previous job
        uses: actions/download-artifact@v3
        with:
          name: plugins-artifacts
          path: plugins
      - name: Change permissions on executables;
        run: |
          chmod +x plugins/yesoreyeram-**/dist/gpx*;
      - name: Sign plugin artifacts
        run: |
          yarn sign;
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
      - name: Publish
        run: |
          ls -lh;
          ls -lhR plugins/yesoreyeram*/dist;
          echo "Publish to github release"
